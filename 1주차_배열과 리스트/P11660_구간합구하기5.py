# 시간 제한 1초 / 백준 11660번
# https://www.acmicpc.net/problem/11660

# 문제 분석 ----------------------------------------------------
# 질의 개수가 100,000개 = 질의마다 합 도출 시 시간 초과
# 2차원 합 배열(D[i][j] = (1,1)부터 (i,j)까지 합)을 이용
# D[i][j] = D[i-1][j] + D[i][j-1] - D[i-1][j-1] + A[i][j]
# --------------------------------------------------------------

# 슈도코드 ------------------------------------------------------
# n(리스트 크기) m(질의 수)
# A(원본 리스트), D(합 배열)

# for n만큼 반복:
#     원본 리스트 데이터 저장 
    
# for i를 1부터 n까지 반복:
#     for j를 1부터 n까지 반복:
#         합 배열 저장 
#         D[i][j] = D[i-1][j] + D[i][j-1] - D[i-1][j-1] + A[i][j]

# for m만큼 반복:
#     질의에 대한 결과 계산 및 출력
#     결과 = D[x2][y2] - D[x1-1][y2] - D[x2][y1-1] + D[x1-1][y1-1]
# ----------------------------------------------------------------  


import sys
input = sys.stdin.readline

n, m = map(int, input().split())
A = [[0] * (n+1)] # 원본 배열 
D = [[0] * (n+1) for _ in range(n+1)] # 2차원 합 배열

# 원본 배열 수 입력
for i in range(n): 
    A_row = [0] + [int(x) for x in input().split()]
    A.append(A_row) 
    
# 구간 합 수 입력    
for i in range(1, n+1): 
    for j in range(1, n+1):
        D[i][j] = D[i-1][j] + D[i][j-1] - D[i-1][j-1] + A[i][j]
        
for _ in range(m):
    x1, y1, x2, y2 = map(int, input().split())
    result = D[x2][y2] - D[x1-1][y2] - D[x2][y1-1] + D[x1-1][y1-1]
    print(result)
    
# 시간 복잡도 O(N^2)